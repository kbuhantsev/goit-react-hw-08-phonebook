{"version":3,"file":"static/js/396.9cb27c1e.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsTable/ContactsTable.styled.js","components/EditContactForm/EditContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/ContactsTable/ContactsTable.jsx","components/PhoneBook/PhoneBook.jsx","pages/Phones.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TextFieldStyled = styled(TextField)`\n  width: 300px;\n  margin-bottom: '10px';\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { TextFieldStyled } from './Filter.styled';\n//\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport debounce from 'lodash.debounce';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const onFilterChange = event => {\n    const value = event.target.value;\n    dispatch(setFilter(value));\n  };\n\n  const onFilterChangeDebounced = debounce(onFilterChange, 500);\n\n  return (\n    <TextFieldStyled\n      id=\"search\"\n      name=\"search\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      sx={{ marginBottom: '10px', width: '300px' }}\n      onChange={onFilterChangeDebounced}\n    />\n  );\n}\n\nexport default Filter;\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const FormStyled = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: fit-content;\n`;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { ButtonStyled, FormStyled } from './ContactForm.styled';\nimport AddIcon from '@mui/icons-material/Add';\nimport { TextField } from '@mui/material';\n//\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/services/contactsApi';\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .min(3, 'Minimum 3 letters!')\n    .required('This field is required!'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .max(13, 'Maximum 13 numbers!')\n    .required('This field is required!'),\n}).required();\n\nexport default function ContactForm() {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: '',\n      phone: '',\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const onFormSubmit = async data => {\n    const { name, phone } = data;\n    const contact = {\n      name,\n      phone,\n    };\n    if (contacts.find(contact => contact.name === name)) {\n      toast.warning(`${name} is already in contacts`, {});\n      return;\n    }\n    await addContact(contact);\n  };\n\n  const onFormError = error => {\n    toast.error(error);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n      toast.success('Contact created');\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit(onFormSubmit, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"phone\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.phone && true}\n              helperText={errors.phone?.message}\n            />\n          )}\n        />\n\n        <ButtonStyled\n          type=\"submit\"\n          variant=\"outlined\"\n          startIcon={<AddIcon />}\n          disabled={isLoading}\n        >\n          Add contact\n        </ButtonStyled>\n      </FormStyled>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n}\n","import TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontSize: theme.typography.htmlFontSize,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: theme.typography.fontSize,\n  },\n  '&.MuiTableCell-body:nth-of-type(2)': {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(even)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n","import styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\nexport const FormStyled = styled.form`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  width: fit-content;\n`;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { ButtonStyled, FormStyled } from './EditContactForm.styled';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { TextField, Typography } from '@mui/material';\n//\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport Box from 'components/Box';\nimport { useEditContactMutation } from 'redux/services/contactsApi';\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object({\n  name: Yup.string()\n    .min(3, 'Minimum 3 letters!')\n    .required('This field is required!'),\n  phone: Yup.string()\n    .matches(phoneRegExp, 'Phone number is not valid!')\n    .max(13, 'Maximum 13 numbers!')\n    .required('This field is required!'),\n}).required();\n\nexport default function EditContactForm({ contact, setOpen }) {\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm({\n    defaultValues: {\n      name: contact?.name,\n      phone: contact?.phone,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const [editContact] = useEditContactMutation();\n\n  const onFormSubmit = async data => {\n    const { name, phone } = data;\n    const editedContact = {\n      id: contact.id,\n      name,\n      phone,\n    };\n    await editContact(editedContact);\n    setOpen(false);\n  };\n\n  const onFormError = error => {\n    toast.error(error);\n  };\n\n  React.useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  return (\n    <>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        Edit contact\n      </Typography>\n      <FormStyled onSubmit={handleSubmit(onFormSubmit, onFormError)}>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Name\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.name && true}\n              helperText={errors.name?.message}\n            />\n          )}\n        />\n\n        <Controller\n          name=\"phone\"\n          control={control}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              label=\"Phone\"\n              variant=\"outlined\"\n              size=\"small\"\n              error={errors.phone && true}\n              helperText={errors.phone?.message}\n            />\n          )}\n        />\n        <Box flexDirection=\"row\" gridGap=\"10px\" justifyContent=\"end\">\n          <ButtonStyled variant=\"contained\" onClick={() => setOpen(false)}>\n            Cancel\n          </ButtonStyled>\n          <ButtonStyled\n            type=\"submit\"\n            variant=\"outlined\"\n            startIcon={<SaveIcon />}\n          >\n            Save\n          </ButtonStyled>\n        </Box>\n      </FormStyled>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </>\n  );\n}\n","import {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport { Paper, Button, Dialog, DialogContent } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { StyledTableCell, StyledTableRow } from './ContactsTable.styled';\n//\nimport Box from 'components/Box';\nimport { useState } from 'react';\nimport EditContactForm from 'components/EditContactForm';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/services/contactsApi';\n\nfunction ContactsTable() {\n  const [open, setOpen] = useState(false);\n  const [contact, setContact] = useState(null);\n\n  const { data: contacts = [], error, isLoading } = useGetContactsQuery();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const onDelete = ({ id }) => {\n    deleteContact(id);\n  };\n\n  const openContactForm = contact => {\n    setContact(contact);\n    setOpen(true);\n  };\n\n  return (\n    <>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <TableContainer component={Paper} sx={{ maxWidth: '900px' }}>\n        <Table aria-label=\"contacts table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Contact ID</StyledTableCell>\n              <StyledTableCell align=\"right\">Name</StyledTableCell>\n              <StyledTableCell align=\"right\">Phone</StyledTableCell>\n              <StyledTableCell align=\"right\"></StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {contacts.map(({ id, name, phone }) => (\n              <StyledTableRow key={id}>\n                <StyledTableCell scope=\"row\">{id}</StyledTableCell>\n                <StyledTableCell align=\"right\">{name}</StyledTableCell>\n                <StyledTableCell align=\"right\">{phone}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Box flexDirection=\"row\" gridGap=\"5px\">\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<EditIcon />}\n                      onClick={() => openContactForm({ id, name, phone })}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<DeleteIcon />}\n                      disabled={isDeleting}\n                      onClick={() => onDelete({ id })}\n                    >\n                      Delete\n                    </Button>\n                  </Box>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog open={open}>\n        <DialogContent>\n          <EditContactForm contact={contact} setOpen={setOpen} />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nexport default ContactsTable;\n","import React, { useEffect } from 'react';\nimport Filter from 'components/Filter';\nimport ContactForm from 'components/ContactForm';\nimport Box from '../Box';\nimport ContactsTable from 'components/ContactsTable';\nimport { useTheme } from '@mui/material/styles';\nimport { ToastContainer } from 'react-toastify';\n//\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/user/selectors';\n\nexport default function PhoneBook() {\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <Box>\n      <Box\n        as=\"h1\"\n        pt=\"20px\"\n        pb=\"10px\"\n        margin=\"0 auto\"\n        color={theme.palette.text.primary}\n      >\n        Phonebook\n      </Box>\n      <ContactForm />\n      <Box as=\"h2\" mb=\"0\" color={theme.palette.text.primary}>\n        Contacts\n      </Box>\n      <Filter />\n      <ContactsTable />\n\n      <ToastContainer position=\"top-right\" autoClose={2000} theme=\"colored\" />\n    </Box>\n  );\n}\n","import PhoneBook from 'components/PhoneBook';\n\nexport default function Phones() {\n  return <PhoneBook />;\n}\n"],"names":["TextFieldStyled","styled","TextField","dispatch","useDispatch","onFilterChangeDebounced","debounce","event","value","target","setFilter","id","name","label","variant","sx","marginBottom","width","onChange","FormStyled","ButtonStyled","Button","schema","Yup","min","required","phone","matches","max","ContactForm","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","reset","formState","errors","isSubmitSuccessful","useGetContactsQuery","data","contacts","useAddContactMutation","addContact","isLoading","onFormSubmit","contact","find","toast","React","onSubmit","error","render","field","size","helperText","message","type","startIcon","Add","disabled","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","StyledTableCell","TableCell","tableCellClasses","backgroundColor","palette","primary","main","color","common","white","fontSize","typography","htmlFontSize","fontWeight","fontWeightBold","StyledTableRow","TableRow","action","hover","border","EditContactForm","setOpen","useEditContactMutation","editContact","editedContact","Typography","align","gutterBottom","Box","flexDirection","gridGap","justifyContent","onClick","Save","useState","open","setContact","useDeleteContactMutation","deleteContact","isDeleting","TableContainer","component","Paper","maxWidth","Table","TableHead","TableBody","map","scope","Edit","openContactForm","Delete","onDelete","Dialog","DialogContent","PhoneBook","useTheme","isLoggedIn","useSelector","selectIsLoggedIn","useEffect","as","pt","pb","margin","text","mb","Phones"],"sourceRoot":""}